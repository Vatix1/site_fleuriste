{"ast":null,"code":"import { getAllEvenement, deleteEvenement, createEvenement, updateEvenement, getAllPhoto } from '@/services/evenement.services';\nexport default {\n  name: 'PanneauEvenement',\n  data() {\n    return {\n      evenements: [],\n      photos: [],\n      showAddPhoto: false,\n      showAddEvenement: false,\n      selectedEvenement: {}\n    };\n  },\n  async mounted() {\n    this.evenements = await this.getEvenement();\n  },\n  methods: {\n    toggleAddPhoto() {\n      this.showAddPhoto = !this.showAddPhoto;\n    },\n    toggleAddEvenement() {\n      this.showAddEvenement = !this.showAddEvenement;\n    },\n    async getEvenement() {\n      return await getAllEvenement();\n    },\n    async getPhoto() {\n      return await getAllPhoto();\n    },\n    async updateEvenement(nom_evenement) {\n      await updateEvenement(nom_evenement);\n    },\n    async supprimerEvenement(id_evenement) {\n      await deleteEvenement(id_evenement);\n    },\n    async createNewEvenement(newEvenementName) {\n      let data = {\n        nom_evenement: newEvenementName\n      };\n      await createEvenement(data);\n    }\n  }\n};","map":{"version":3,"names":["getAllEvenement","deleteEvenement","createEvenement","updateEvenement","getAllPhoto","name","data","evenements","photos","showAddPhoto","showAddEvenement","selectedEvenement","mounted","getEvenement","methods","toggleAddPhoto","toggleAddEvenement","getPhoto","nom_evenement","supprimerEvenement","id_evenement","createNewEvenement","newEvenementName"],"sources":["/home/alexandrelesur/Documents/GitHub/site_fleuriste/Front/src/components/PanneauEvenement.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <h2>Gestion des Evenements</h2>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <button class=\"btn show-add-bouquet\" @click=\"toggleAddEvenement\">{{ showAddEvenement ? 'Fermer' : 'Ajouter un evenement'}}</button>\n                <div v-if=\"showAddEvenement\" class=\"card\">\n                <div class=\"card-header\">\n                    <h3>Ajouter un evenement</h3>\n                </div>\n                <div class=\"card-body\">\n                    <form>\n                    <div class=\"form-group\">\n                        <label for=\"nom\">Nom</label>\n                        <input type=\"text\" class=\"form-control\" id=\"newEvenementName\" required v-model=\"newEvenementName\">\n                    </div>\n                    </form>\n                    <button type=\"submit\" class=\"btn btn-primary\" @click=\"createNewEvenement(newEvenementName)\">Ajouter</button>\n                </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div v-for=\"(evenement, evenementIndex) in this.evenements\" :key=\"evenementIndex\" class=\"card-min\">\n                <hr>\n                <h2>{{ evenement.nom_evenement }}</h2>\n                <div class=\"counter-container\">\n                    <button class=\"btn btn-secondary\" @click=\"updateEvenement(evenement.id_evenement,evenement.nom_evenement)\">Modifier</button>\n                    <button class=\"btn btn-danger\" @click=\"supprimerEvenement(evenement.id_evenement)\">Supprimer</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <button class=\"btn show-add-bouquet\" @click=\"toggleAddPhoto\">{{ showAddPhoto ? 'Fermer' : 'Ajouter une photo'}}</button>\n                <div v-if=\"showAddPhoto\" class=\"card\">\n                <div class=\"card-header\">\n                    <h3>Ajouter une photo</h3>\n                </div>\n                <div class=\"card-body\">\n                    <form>\n                        <div class=\"form-group\">\n                            <label for=\"image\">Image</label>\n                            <input type=\"file\" class=\"form-control-file\" id=\"newEvenementImage\">\n                            <h3>Evenements</h3>\n                            <div v-for=\"(evenement, evenementIndex) in this.evenements\" :key=\"evenementIndex\">\n                                <select name=\"evenement\" v-model=\"selectedEvenement[evenement.id_evenement]\">\n                                    <option value=\"\">{{ evenement.nom_evenement}}</option>\n                                </select>\n                            </div>\n                        </div>\n                    <button type=\"submit\" class=\"btn btn-primary\" @click=\"createNewPhoto\">Ajouter</button>\n                    </form>\n                </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"card-deck\">\n                    <div class=\"card\" v-for=\"(evenement, evenementIndex) in evenements\" :key=\"evenementIndex\">\n                        <div class=\"card-body\">\n                            <div class=\"row\">\n                                <div class=\"col-4\" v-for=\"(photo, photoIndex) in evenement.photos\" :key=\"photoIndex\">\n                                    <img :src=\"photo.url\" class=\"img-fluid\" alt=\"photo\">\n                                    <button class=\"btn btn-secondary\" @click=\"editPhoto(photo.id_photo, photo.id_evenement)\">Modifier</button>\n                                    <button class=\"btn btn-danger\" @click=\"deletePhoto(photo.id_photo)\">Supprimer</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport { getAllEvenement, deleteEvenement, createEvenement, updateEvenement, getAllPhoto } from '@/services/evenement.services';\n\nexport default {\n    name: 'PanneauEvenement',\n\n    data() {\n        return {\n            evenements: [],\n            photos:[],\n            showAddPhoto: false,\n            showAddEvenement: false,\n            selectedEvenement: {}\n        }\n    },\n\n    async mounted() {\n        this.evenements = await this.getEvenement();\n    },\n\n    methods: {\n        toggleAddPhoto(){\n            this.showAddPhoto = !this.showAddPhoto;\n        },\n        toggleAddEvenement() {\n            this.showAddEvenement = !this.showAddEvenement;\n        },\n        async getEvenement() {\n            return await getAllEvenement();\n        },\n        async getPhoto(){\n            return await getAllPhoto();\n        },\n        async updateEvenement(nom_evenement){\n            await updateEvenement(nom_evenement)\n        },\n        async supprimerEvenement(id_evenement){\n            await deleteEvenement(id_evenement);\n        },\n        async createNewEvenement(newEvenementName) {\n            let data = {\n                nom_evenement: newEvenementName\n            }\n            await createEvenement(data);\n        }\n\n    }\n}\n</script>"],"mappings":"AAkFA,SAASA,eAAe,EAAEC,eAAe,EAAEC,eAAe,EAAEC,eAAe,EAAEC,WAAU,QAAS,+BAA+B;AAE/H,eAAe;EACXC,IAAI,EAAE,kBAAkB;EAExBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAC,EAAE;MACTC,YAAY,EAAE,KAAK;MACnBC,gBAAgB,EAAE,KAAK;MACvBC,iBAAiB,EAAE,CAAC;IACxB;EACJ,CAAC;EAED,MAAMC,OAAOA,CAAA,EAAG;IACZ,IAAI,CAACL,UAAS,GAAI,MAAM,IAAI,CAACM,YAAY,CAAC,CAAC;EAC/C,CAAC;EAEDC,OAAO,EAAE;IACLC,cAAcA,CAAA,EAAE;MACZ,IAAI,CAACN,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IAC1C,CAAC;IACDO,kBAAkBA,CAAA,EAAG;MACjB,IAAI,CAACN,gBAAe,GAAI,CAAC,IAAI,CAACA,gBAAgB;IAClD,CAAC;IACD,MAAMG,YAAYA,CAAA,EAAG;MACjB,OAAO,MAAMb,eAAe,CAAC,CAAC;IAClC,CAAC;IACD,MAAMiB,QAAQA,CAAA,EAAE;MACZ,OAAO,MAAMb,WAAW,CAAC,CAAC;IAC9B,CAAC;IACD,MAAMD,eAAeA,CAACe,aAAa,EAAC;MAChC,MAAMf,eAAe,CAACe,aAAa;IACvC,CAAC;IACD,MAAMC,kBAAkBA,CAACC,YAAY,EAAC;MAClC,MAAMnB,eAAe,CAACmB,YAAY,CAAC;IACvC,CAAC;IACD,MAAMC,kBAAkBA,CAACC,gBAAgB,EAAE;MACvC,IAAIhB,IAAG,GAAI;QACPY,aAAa,EAAEI;MACnB;MACA,MAAMpB,eAAe,CAACI,IAAI,CAAC;IAC/B;EAEJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}