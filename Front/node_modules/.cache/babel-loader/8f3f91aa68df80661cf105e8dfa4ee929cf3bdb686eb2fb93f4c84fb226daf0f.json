{"ast":null,"code":"import { del, get, patch, post } from \"./axios.services\";\n//import authHeader from \"./auth-header\";\n\nasync function testPost() {\n  return post('/user/testPost', 'testPost');\n}\nasync function getAllUsersFromAPI() {\n  return get('/user/getAllUsers', getAllUsers);\n}\nasync function getAllUsers() {\n  let anwser = await getAllUsersFromAPI();\n  return anwser.data;\n}\nasync function getAllRolesFromAPI() {\n  return get('/user/getAllRoles', getAllRoles);\n}\nasync function getAllRoles() {\n  let anwser = await getAllRolesFromAPI();\n  return anwser.data;\n}\nasync function updateUtilisateurFromAPI(data) {\n  return patch('/user/updateUtilisateur', data, updateUtilisateur);\n}\nasync function updateUtilisateur(data) {\n  let anwser = await updateUtilisateurFromAPI(data);\n  return anwser.data;\n}\nasync function deleteUtilisateurFromAPI(id) {\n  return del('/user/deleteUtilisateur?id=' + id, deleteUtilisateur);\n}\nasync function deleteUtilisateur(id) {\n  console.log('del serv', id);\n  let anwser = await deleteUtilisateurFromAPI(id);\n  return anwser.data;\n}\nasync function createUtilisateurFromAPI(data) {\n  console.log('pass', data);\n  return post('/user/createUtilisateur', data, 'createUtilisateur');\n}\nasync function createUtilisateur(data) {\n  let anwser = await createUtilisateurFromAPI(data);\n  console.log('create', anwser);\n  return anwser.data;\n}\nasync function loginFromAPI(user) {\n  console.log('pass', user);\n  let data = {\n    nom_utilisateur: user.username,\n    mot_de_passe: user.password\n  };\n  console.log('pass 2', data);\n  return post('/user/signin', data, 'signin');\n}\nasync function login(user) {\n  let anwser = await loginFromAPI(user);\n  if (anwser.data.accesToken) {\n    localStorage.setItem('user', JSON.stringify(anwser.data));\n  }\n  return anwser.data;\n}\nasync function logout() {\n  localStorage.removeItem('user');\n}\n/*\nregister(user) {\n    return post('auth/signup', {\n        nom_utilisateur: user.nom_utilisateur,\n        email: user.email,\n        mot_de_passe: user.mot_de_passe\n    });\n}\n*/\n/*\nasync function getUserProfile() {\n    return get( '/user/getProfileUser', { headers: authHeader() });\n}\n\nasync function getModProfile() {\n    return get( '/user/getProfileMod', { headers: authHeader() });\n}\n\nasync function getAdminProfile() {\n    return get( '/user/getProfileAdmin', {headers: authHeader() });\n}\n*/\n\nexport { getAllUsers, getAllRoles, updateUtilisateur, deleteUtilisateur, createUtilisateur, login, logout, testPost };","map":{"version":3,"names":["del","get","patch","post","testPost","getAllUsersFromAPI","getAllUsers","anwser","data","getAllRolesFromAPI","getAllRoles","updateUtilisateurFromAPI","updateUtilisateur","deleteUtilisateurFromAPI","id","deleteUtilisateur","console","log","createUtilisateurFromAPI","createUtilisateur","loginFromAPI","user","nom_utilisateur","username","mot_de_passe","password","login","accesToken","localStorage","setItem","JSON","stringify","logout","removeItem"],"sources":["/home/alexandrelesur/Documents/GitHub/site_fleuriste/Front/src/services/users.services.js"],"sourcesContent":["import { del, get, patch, post } from \"./axios.services\";\n//import authHeader from \"./auth-header\";\n\nasync function testPost(){\n    return post('/user/testPost', 'testPost')\n}\n\nasync function getAllUsersFromAPI(){\n    return get('/user/getAllUsers', getAllUsers)\n}\n\nasync function getAllUsers() {\n    let anwser = await getAllUsersFromAPI()\n    return anwser.data\n}\n\nasync function getAllRolesFromAPI() {\n    return get('/user/getAllRoles', getAllRoles)\n}\n\nasync function getAllRoles() {\n    let anwser = await getAllRolesFromAPI()\n    return anwser.data\n}\n\nasync function updateUtilisateurFromAPI(data) {\n    return patch('/user/updateUtilisateur',data, updateUtilisateur)\n}\n\nasync function updateUtilisateur(data) {\n    let anwser = await updateUtilisateurFromAPI(data)\n    return anwser.data\n}\n\nasync function deleteUtilisateurFromAPI(id) {\n    return del('/user/deleteUtilisateur?id='+id, deleteUtilisateur)\n}\n\nasync function deleteUtilisateur(id) {\n    console.log('del serv', id);\n    let anwser = await deleteUtilisateurFromAPI(id)\n    return anwser.data\n}\n\nasync function createUtilisateurFromAPI(data) {\n    console.log('pass',data);\n    return post('/user/createUtilisateur',data, 'createUtilisateur')\n}\n\nasync function createUtilisateur(data) {\n    let anwser = await createUtilisateurFromAPI(data)\n    console.log('create', anwser);\n    return anwser.data\n}\n\nasync function loginFromAPI(user) {\n    console.log('pass', user);\n    let data = {\n        nom_utilisateur: user.username,\n        mot_de_passe: user.password\n    }\n    console.log('pass 2', data);\n    return post('/user/signin',data,'signin')\n}\n\nasync function login (user) {\n    let anwser = await loginFromAPI(user)\n    if(anwser.data.accesToken) {\n        localStorage.setItem('user', JSON.stringify(anwser.data))\n    }\n    return anwser.data\n}\n\nasync function logout() {\n    localStorage.removeItem('user');\n}\n/*\nregister(user) {\n    return post('auth/signup', {\n        nom_utilisateur: user.nom_utilisateur,\n        email: user.email,\n        mot_de_passe: user.mot_de_passe\n    });\n}\n*/\n/*\nasync function getUserProfile() {\n    return get( '/user/getProfileUser', { headers: authHeader() });\n}\n\nasync function getModProfile() {\n    return get( '/user/getProfileMod', { headers: authHeader() });\n}\n\nasync function getAdminProfile() {\n    return get( '/user/getProfileAdmin', {headers: authHeader() });\n}\n*/\n\nexport{\n    getAllUsers,\n    getAllRoles,\n    updateUtilisateur,\n    deleteUtilisateur,\n    createUtilisateur,\n    login,\n    logout,\n    testPost\n}\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}