{"ast":null,"code":"import { getAllUsers, getAllRoles, updateUtilisateur, createUtilisateur, deleteUtilisateur } from '@/services/users.services';\nexport default {\n  name: \"PanneauUtilisateur\",\n  data() {\n    return {\n      utilisateurs: [],\n      roles: [],\n      selectedRole: {},\n      showAddUtilisateur: false,\n      newUtilisateurName: '',\n      newUtilisateurMDP: '',\n      testPost: ''\n    };\n  },\n  async mounted() {\n    this.utilisateurs = await this.getUtilisateur();\n    this.roles = await this.getRoles();\n  },\n  methods: {\n    async getUtilisateur() {\n      return await getAllUsers();\n    },\n    async getRoles() {\n      return await getAllRoles();\n    },\n    toggleAddUtilisateur() {\n      this.showAddUtilisateur = !this.showAddUtilisateur;\n    },\n    async modifierUtilisateur(id_utilisateur) {\n      const selectedRoleId = this.selectedRole[id_utilisateur];\n      let data = {\n        id_utilisateur: id_utilisateur,\n        id_role: selectedRoleId\n      };\n      await updateUtilisateur(data);\n    },\n    async createNewUtilisateur(nom_utilisateur, mot_de_passe) {\n      let data = {\n        nom_utilisateur: nom_utilisateur,\n        mot_de_passe: mot_de_passe\n      };\n      await createUtilisateur(data);\n      location.reload();\n    },\n    async supprimerUtilisateur(id_utilisateur) {\n      await deleteUtilisateur(id_utilisateur);\n      location.reload();\n    }\n  }\n};","map":{"version":3,"names":["getAllUsers","getAllRoles","updateUtilisateur","createUtilisateur","deleteUtilisateur","name","data","utilisateurs","roles","selectedRole","showAddUtilisateur","newUtilisateurName","newUtilisateurMDP","testPost","mounted","getUtilisateur","getRoles","methods","toggleAddUtilisateur","modifierUtilisateur","id_utilisateur","selectedRoleId","id_role","createNewUtilisateur","nom_utilisateur","mot_de_passe","location","reload","supprimerUtilisateur"],"sources":["/home/alexandrelesur/Documents/GitHub/site_fleuriste/Front/src/components/PanneauUtilisateur.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <h2>Gestion des utilisateurs</h2>\n        </div>\n      </div>\n      <div class=\"row\">\n            <div class=\"col-12\">\n                <button class=\"btn show-add-bouquet\" @click=\"toggleAddUtilisateur\">{{ showAddUtilisateur ? 'Fermer' : 'Ajouter un utilisateur'}}</button>\n                <div v-if=\"showAddUtilisateur\" class=\"card\">\n                <div class=\"card-header\">\n                    <h3>Ajouter un utilisateur</h3>\n                </div>\n                <div class=\"card-body\">\n                    <form>\n                    <div class=\"form-group\">\n                        <label for=\"nom\">Nom</label>\n                        <input type=\"text\" class=\"form-control\" id=\"newUtilisateurName\" required v-model=\"newUtilisateurName\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"nom\">Mot de passe</label>\n                        <input type=\"text\" class=\"form-control\" id=\"newUtilisateurMDP\" required v-model=\"newUtilisateurMDP\">\n                    </div>\n                    </form>\n                    <button type=\"submit\" class=\"btn btn-primary\" @click=\"createNewUtilisateur(newUtilisateurName,newUtilisateurMDP)\">Ajouter</button>\n                </div>\n                </div>\n            </div>\n        </div>\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>Nom</th>\n            <th>Role ID</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(utilisateur,utilisateurIndex) in this.utilisateurs\" :key=\"utilisateurIndex\">\n            <td>{{ utilisateur.nom_utilisateur }}</td>\n            <td>\n            <select v-model=\"selectedRole[utilisateur.id_utilisateur]\"> \n              <option v-for=\"(role, roleIndex) in roles\" :key=\"roleIndex\" :value=\"role.id_role\">\n                {{ role.nom_role }}\n              </option>\n            </select>\n          </td>\n          <td>\n            <button class=\"btn btn-primary\" @click=\"modifierUtilisateur(utilisateur.id_utilisateur)\">\n              Modifier\n            </button>\n            <button class=\"btn btn-danger\" @click=\"supprimerUtilisateur(utilisateur.id_utilisateur)\">\n              Supprimer\n            </button>\n          </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n  \n  <script>\n  import { getAllUsers, getAllRoles, updateUtilisateur, createUtilisateur, deleteUtilisateur } from '@/services/users.services'\n  \n  export default {\n    name: \"PanneauUtilisateur\",\n  \n    data() {\n      return {\n        utilisateurs: [],\n        roles: [],\n        selectedRole: {},\n        showAddUtilisateur: false,\n        newUtilisateurName: '',\n        newUtilisateurMDP: '',\n        testPost: ''\n      };\n    },\n    async mounted() {\n      this.utilisateurs = await this.getUtilisateur();\n      this.roles = await this.getRoles();\n    },\n  \n    methods: {\n        \n        async getUtilisateur() {\n            return await getAllUsers();\n        },\n        async getRoles(){\n            return await getAllRoles();\n        },\n        toggleAddUtilisateur() {\n            this.showAddUtilisateur = !this.showAddUtilisateur;\n        },\n        async modifierUtilisateur(id_utilisateur) {\n            const selectedRoleId = this.selectedRole[id_utilisateur]\n            let data = {\n                id_utilisateur: id_utilisateur,\n                id_role: selectedRoleId\n            }\n            await updateUtilisateur(data);\n        },\n        async createNewUtilisateur(nom_utilisateur,mot_de_passe) {\n            let data = {\n                nom_utilisateur: nom_utilisateur,\n                mot_de_passe: mot_de_passe\n            }\n            await createUtilisateur(data)\n            location.reload();\n        },\n        async supprimerUtilisateur(id_utilisateur) {\n          await deleteUtilisateur(id_utilisateur)\n          location.reload();\n        }\n    }\n}\n  \n  </script>\n  "],"mappings":"AA8DE,SAASA,WAAW,EAAEC,WAAW,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,iBAAgB,QAAS,2BAA0B;AAE5H,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAE1BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE,CAAC,CAAC;MAChBC,kBAAkB,EAAE,KAAK;MACzBC,kBAAkB,EAAE,EAAE;MACtBC,iBAAiB,EAAE,EAAE;MACrBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACP,YAAW,GAAI,MAAM,IAAI,CAACQ,cAAc,CAAC,CAAC;IAC/C,IAAI,CAACP,KAAI,GAAI,MAAM,IAAI,CAACQ,QAAQ,CAAC,CAAC;EACpC,CAAC;EAEDC,OAAO,EAAE;IAEL,MAAMF,cAAcA,CAAA,EAAG;MACnB,OAAO,MAAMf,WAAW,CAAC,CAAC;IAC9B,CAAC;IACD,MAAMgB,QAAQA,CAAA,EAAE;MACZ,OAAO,MAAMf,WAAW,CAAC,CAAC;IAC9B,CAAC;IACDiB,oBAAoBA,CAAA,EAAG;MACnB,IAAI,CAACR,kBAAiB,GAAI,CAAC,IAAI,CAACA,kBAAkB;IACtD,CAAC;IACD,MAAMS,mBAAmBA,CAACC,cAAc,EAAE;MACtC,MAAMC,cAAa,GAAI,IAAI,CAACZ,YAAY,CAACW,cAAc;MACvD,IAAId,IAAG,GAAI;QACPc,cAAc,EAAEA,cAAc;QAC9BE,OAAO,EAAED;MACb;MACA,MAAMnB,iBAAiB,CAACI,IAAI,CAAC;IACjC,CAAC;IACD,MAAMiB,oBAAoBA,CAACC,eAAe,EAACC,YAAY,EAAE;MACrD,IAAInB,IAAG,GAAI;QACPkB,eAAe,EAAEA,eAAe;QAChCC,YAAY,EAAEA;MAClB;MACA,MAAMtB,iBAAiB,CAACG,IAAI;MAC5BoB,QAAQ,CAACC,MAAM,CAAC,CAAC;IACrB,CAAC;IACD,MAAMC,oBAAoBA,CAACR,cAAc,EAAE;MACzC,MAAMhB,iBAAiB,CAACgB,cAAc;MACtCM,QAAQ,CAACC,MAAM,CAAC,CAAC;IACnB;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}